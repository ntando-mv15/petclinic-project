name: Java CI-CD pipeline

on:
  push:
    branches: [ "ci-cd-workflows" ]
 


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with: 
        fetch-depth: 0
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
       
    - name: Cache SonarQube packages
      uses: actions/cache@v1
      with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
        

    - name: Build and Analyze
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=petclinic-project

     

    - name: Upload Artifact
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: petclinic-war
        path: "target/petclinic.war"
        if-no-files-found: error
    
    
  deploy:
     needs: build
     runs-on: ubuntu-latest

     steps:

     - name: Download artifact
       uses: actions/download-artifact@v3
       with:
        name: petclinic-war
        path: "/home/runner/work/Petclinic/Petclinic/target/"


     - name: Set up SSH
       run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
     
        
     - name: Deploy to EC2
       run: |
            scp -i "~/.ssh/id_rsa" -o StrictHostKeyChecking=no /home/runner/work/Petclinic/Petclinic/target/petclinic.war ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/opt/apache-tomcat-9.0.65/webapps
            

